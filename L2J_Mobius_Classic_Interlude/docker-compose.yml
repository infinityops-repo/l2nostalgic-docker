version: '3.8'

volumes:
  db-setup-scripts:

# Estas variáveis de ambiente vêm do arquivo .env
x-env: &env
  MARIADB_PASSWORD: '${MARIADB_PASSWORD:-default_pass}'
  MARIADB_ROOT_PASSWORD: '${MARIADB_ROOT_PASSWORD:-default_root_pass}'
  MARIADB_USER: '${MARIADB_USER:-default_user}'
  MARIADB_DATABASE: '${MARIADB_DATABASE:-default_database}'

x-common: &common
  restart: unless-stopped
  tty: True

services:
  # Serviço para combinar todos os scripts SQL
  sql-scripts:
    image: alpine
    entrypoint: ['/bin/sh', '-c']
    command:
      - |
        cp /login-sql-scripts/*.sql /all-sql-scripts/ && cp /game-sql-scripts/*.sql /all-sql-scripts/
    volumes:
      - ./dist/db_installer/sql/login:/login-sql-scripts
      - ./dist/db_installer/sql/game:/game-sql-scripts
      - db-setup-scripts:/all-sql-scripts

  database:
    <<: *common
    image: mariadb
    container_name: mariadb
    environment:
      <<: [*env]
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test:
        [
          'CMD',
          'healthcheck.sh',
          '--su-mysql',
          '--connect',
          '--innodb_initialized',
        ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    volumes:
      - db-setup-scripts:/docker-entrypoint-initdb.d
      - ./db_data:/var/lib/mysql
    depends_on:
      sql-scripts:
        condition: service_completed_successfully

  phpmyadmin:
    <<: *common
    image: phpmyadmin
    ports:
      - 8085:80
    environment:
      - TZ=Etc/UTC
      - PMA_HOST=mariadb
    depends_on:
      database:
        condition: service_healthy

  # Serviço de build para o Game Server
  builder-gameserver:
    image: gameserver:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MARIADB_PASSWORD: ${MARIADB_PASSWORD}
        MARIADB_USER: ${MARIADB_USER}
        MARIADB_DATABASE: ${MARIADB_DATABASE}
        MARIADB_HOSTNAME: mariadb
        LOGIN_SERVER_HOSTNAME: login_server
    depends_on:
      database:
        condition: service_healthy

  # Serviço de build para o Login Server
  builder-loginserver:
    image: loginserver:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MARIADB_PASSWORD: ${MARIADB_PASSWORD}
        MARIADB_USER: ${MARIADB_USER}
        MARIADB_DATABASE: ${MARIADB_DATABASE}
        MARIADB_HOSTNAME: mariadb
        LOGIN_SERVER_HOSTNAME: login_server
    depends_on:
      database:
        condition: service_healthy

  # Game Server
  game-server:
    <<: *common
    image: gameserver:latest
    depends_on:
      builder-gameserver:
        condition: service_completed_successfully
      database:
        condition: service_healthy
    container_name: game_server
    command: 'bash -c "\
      /usr/bin/cp /opt/l2/GameServer.jar /host-dist/libs/GameServer.jar && \
      mkdir -p /host-dist/game/log && \
      cd /host-dist/game/ && \
      ./GameServerTask.sh"'
    ports:
      - 7777:7777/tcp
    volumes:
      - ./dist:/host-dist

  # Login Server
  login-server:
    <<: *common
    image: loginserver:latest
    depends_on:
      builder-loginserver:
        condition: service_completed_successfully
      database:
        condition: service_healthy
    container_name: login_server
    command: 'bash -c "\
      /usr/bin/cp /opt/l2/LoginServer.jar /host-dist/libs/LoginServer.jar && \
      mkdir -p /host-dist/Login/log && \
      cd /host-dist/login/ && \
      ./LoginServerTask.sh"'
    ports:
      - 2106:2106/tcp
    volumes:
      - ./dist:/host-dist